basePath: /api/v1
definitions:
  model.CampaignDetailResponse:
    properties:
      current_amount:
        type: integer
      description:
        type: string
      goal_amount:
        type: integer
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/model.ImageDetailResponse'
        type: array
      perks:
        items:
          type: string
        type: array
      short_description:
        type: string
      title:
        type: string
    type: object
  model.GetCampaignDetailResponse:
    properties:
      campaign:
        $ref: '#/definitions/model.CampaignDetailResponse'
      user:
        $ref: '#/definitions/model.UserDetailResponse'
    type: object
  model.GetCampaignResponse:
    properties:
      current_amount:
        type: integer
      goal_amount:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      short_description:
        type: string
      slug:
        type: string
      user_id:
        type: integer
    type: object
  model.ImageDetailResponse:
    properties:
      image_url:
        type: string
      is_primary:
        type: boolean
    type: object
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.LoginResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      token:
        type: string
    type: object
  model.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      occupation:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - occupation
    - password
    type: object
  model.RegisterResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      occupation:
        type: string
      token:
        type: string
    type: object
  model.UserDetailResponse:
    properties:
      avatar_url:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  model.WebResponse:
    properties:
      code:
        type: integer
      data:
        type: object
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Contains API for bwastartup-crowdfunding project
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Crowdfunding Web API
  version: "1.0"
paths:
  /avatars:
    post:
      consumes:
      - image/*
      description: Upload image of avatar via form
      operationId: upload-avatar
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WebResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
      summary: Upload Avatar account
  /campaigns:
    get:
      description: Can use query parameter user_id, backer_id, or none
      operationId: get-campaigns
      parameters:
      - description: UserID
        in: query
        name: user_id
        type: integer
      - description: BackerID
        in: query
        name: backer_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.GetCampaignResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
      summary: Get campaign data
  /campaigns/:id:
    get:
      description: must send campaign id in URI
      operationId: get-campaign-details
      parameters:
      - description: CampaignID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.GetCampaignDetailResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
      summary: Get campaign details with campaign id
  /sessions:
    post:
      consumes:
      - application/json
      description: Login account use email and password.
      operationId: login-user
      parameters:
      - description: Login Account
        in: body
        name: LoginRequest
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
      summary: Login account
  /users:
    post:
      consumes:
      - application/json
      description: Create account with name, occupation, email, and password data
      operationId: register-user
      parameters:
      - description: Register Account
        in: body
        name: RegisterRequest
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.RegisterResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
      summary: Register account
schemes:
- http
swagger: "2.0"
